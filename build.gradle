
//apply plugin: 'java'
//apply plugin: 'jacoco'
//apply plugin: 'application'
//id 'org.openjfx.javafxplugin' version '0.0.8'


plugins {
    id  'java'  
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'org.beryx.jlink' version '2.12.0'
}


mainClassName = 'mainGUI_FX.Main'

if (!hasProperty('mainClass')) {
    ext.mainClass = 'mainGUI_FX.Main'
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    //testImplementation     'junit:junit:4.13'
    implementation 'com.google.api-client:google-api-client:1.23.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
    implementation 'com.google.apis:google-api-services-drive:v3-rev110-1.23.0'
    //    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.32.3'
    implementation 'org.xerial:sqlite-jdbc:3.32.3'
//    implementation 'org.eclipse.birt.runtime:javax.xml:1.3.4.v201005080400'
//    implementation 'io.thorntail:javafx:2.7.0.Final'
}

//
//plugins {
//  id 'application'
//  id 'org.openjfx.javafxplugin' version '0.0.8'
//}




//compileJava {
//    sourceCompatibility = '1.8'
//    targetCompatibility = '1.8'
//}
//
// compileOptions {
//    sourceCompatibility JavaVersion.VERSION_1_8
//    targetCompatibility JavaVersion.VERSION_1_8
//  }
//
javafx {
    version = "12"
    modules = [ 'javafx.controls', 'javafx.fxml','javafx.base', 'javafx.graphics', 'javafx.media','javafx.swing','javafx.web']
    //    modules = [ 'javafx.controls', 'javafx.fxml','javafx.base', 'javafx.graphics', 'javafx.media','javafx.swing','javafx.web','javafx-swt']

}

sourceSets {
    main {
        resources {
            srcDirs "src/main/Resources", "src/main/configs"
        }
    }
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'GoogleDriveSynchronizatorJava.jar'
    }
}

jar {
    archiveName = 'GoogleDriveSynchronizatorJava.jar'

    manifest {attributes 'Main-Class': 'mainGUI_FX.Main'}

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}